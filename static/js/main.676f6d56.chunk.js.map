{"version":3,"sources":["components/Search/Search.js","hoc/Aux.js","components/WeatherCard/Forecast/Forecast.js","components/WeatherCard/WeatherCard.js","helpers/functions.js","containers/Weather.js","components/Error.js","App.js","serviceWorker.js","index.js"],"names":["Search","props","className","placeholder","type","onKeyPress","handleKeyDown","viewBox","fill","d","aux","children","Forecast","time","forecast","dt_txt","forecastDates","Date","icon","replace","weatherIcon","toDateString","slice","src","alt","Math","round","temperature","weatherCard","dt","fullIconPath","currentWeather","dateTimeStamp","date","dateObject","sDate","toString","currentDate","getDate","city","description","max","wind_speed","map","weekForecast","key","id","weather","Aux","Error","errorDisplay","error","style","color","textAlign","marginBottom","App","useState","zip","setZip","setCurrentWeather","setForecast","setError","apiKey","baseUrl","useEffect","getWeather","then","catch","err","getForecast","data","handleResponse","response","status","statusText","axios","get","res","Object","entries","length","mapDataToWeatherInterface","result","i","list","push","shift","mapped","random","substring","name","country","sys","humidity","main","icon_id","temp","wind","speed","condition","cod","temp_min","temp_max","min","keys","forEach","undefined","Weather","e","target","value","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"qVAwBeA,G,YArBA,SAACC,GACd,OACE,yBAAKC,UAAU,UACb,6BACE,2BACEA,UAAU,QACVC,YAAY,oBACZC,KAAK,OACLC,WAAYJ,EAAMK,gBAEpB,yBAAKJ,UAAU,aAAaK,QAAQ,aAClC,0BACEC,KAAK,eACLC,EAAE,2QCbCC,EAHH,SAAAT,GAAK,OAAIA,EAAMU,UCoBZC,G,MAjBE,SAACX,GAChB,IAAMY,EAAOZ,EAAMa,SAASC,OACxBC,EAAgB,IAAIC,KAAKJ,GACzBK,EAAOjB,EAAMa,SAASI,KAC1BA,EAAOA,EAAKC,QAAQ,KAAM,KAC1B,IAAMC,EAAW,4CAAwCF,EAAxC,WAGjB,OADAF,GADAA,EAAgBA,EAAcK,gBACAC,MAAM,EAAG,GAErC,yBAAKpB,UAAU,QACb,6BAAMc,GACN,yBAAKO,IAAKH,EAAaI,IAAI,iBAC3B,6BAAMC,KAAKC,MAAMzB,EAAMa,SAASa,aAAhC,W,UCqCSC,EA/CK,SAAC3B,GACnB,ICNqC4B,EDO/BC,EAAY,UADF,sCACE,OAAgB7B,EAAM8B,eAAeb,KAArC,WACdc,EAAgB/B,EAAM8B,eAAeE,KACrCC,EAAa,IAAIjB,KAAqB,IAAhBe,GACtBG,EAAQD,EAAWE,WAEjBC,EAAW,UAAMF,EAAMb,MAAM,EAAG,GAArB,aCZoBO,EDanCK,ECXAL,EAAGS,WACFT,EAAGS,UAAY,KAAO,GAAsB,KAAjBT,EAAGS,UAC3B,KACAT,EAAGS,UAAY,KAAO,GAAsB,KAAjBT,EAAGS,UAC9B,KACAT,EAAGS,UAAY,KAAO,GAAsB,KAAjBT,EAAGS,UAC9B,KACA,ODGW,YAEZH,EAAMb,MAAM,GAAI,KAErB,OACE,yBAAKpB,UAAU,WACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,iBACb,6BAAMmC,GACN,6BAAMpC,EAAM8B,eAAeQ,OAE7B,yBAAKrC,UAAU,mBACb,yBAAKA,UAAU,gBACZuB,KAAKC,MAAMzB,EAAM8B,eAAeJ,aADnC,QAGA,6BACE,yBAAKzB,UAAU,wBACb,2BAAID,EAAM8B,eAAeS,aACzB,yBAAKjB,IAAKO,EAAcN,IAAI,kBAE9B,qDAC0BC,KAAKC,MAAMzB,EAAM8B,eAAeU,KAD1D,8BAEyB,IACtBhB,KAAKC,MAAMzB,EAAM8B,eAAeW,YAHnC,UAQJ,yBAAKxC,UAAU,gBACZD,EAAMa,SAAS6B,KAAI,SAACC,GACnB,OAAO,kBAAC,EAAD,CAAUC,IAAKD,EAAaE,GAAIhC,SAAU8B,YE5BhDG,EAXC,SAAC9C,GACf,OACE,kBAAC+C,EAAD,KACE,kBAAC,EAAD,CACElC,SAAUb,EAAMa,SAChBiB,eAAgB9B,EAAM8B,mBCQfkB,EAfD,SAAChD,GACb,IAMIiD,EAAe,KAKnB,OAJmB,MAAfjD,EAAMkD,QACRD,EAAe,uBAAGE,MARH,CACfC,MAAO,UACPC,UAAW,SACXC,aAAc,SAKsBtD,EAAMkD,QAGrC,6BAAMD,IC4IAM,EAnJH,WAAO,IAAD,EACMC,mBAAS,MADf,mBACTC,EADS,KACJC,EADI,OAE4BF,mBAAS,IAFrC,mBAET1B,EAFS,KAEO6B,EAFP,OAGgBH,mBAAS,IAHzB,mBAGT3C,EAHS,KAGC+C,EAHD,OAIUJ,mBAAS,MAJnB,mBAITN,EAJS,KAIFW,EAJE,KAMVC,EAAS,mCACTC,EAAO,2CAEbC,qBAAU,WACRC,EAAWR,GACRS,MAAK,SAACpB,GACLa,EAAkBb,GAClBe,EAAS,SAEVM,OAAM,SAACC,GACNP,EAAS,wCAAyCX,QAErD,CAACO,EAAKP,IAETc,qBAAU,WACRK,EAAYZ,GACTS,MAAK,SAACI,GACLV,EAAYU,GACZT,EAAS,SAEVM,OAAM,SAACC,GACNP,EAAS,mCAAD,OAAoCJ,EAApC,KAA4CP,QAEvD,CAACO,EAAKP,IAGT,IAMMqB,EAAiB,SAACC,GACtB,GAAwB,MAApBA,EAASC,OACX,OAAOD,EAASF,KAEhB,MAAM,IAAItB,EAAM,mBAAqBwB,EAASE,aAK5CT,EAAa,WACjB,OAAOU,IACJC,IADI,UAEAb,EAFA,uBAEsBN,EAFtB,YA3CW,KA2CX,kBAEkDK,EAFlD,kBAIJI,MAAK,SAACW,GAAD,OAASN,EAAeM,MAC7BX,MAAK,SAACpB,GACL,GAAIgC,OAAOC,QAAQjC,GAASkC,OAE1B,OADmBC,EAA0BnC,OAO/CuB,EAAc,WAClB,OAAOM,IACJC,IADI,UAEAb,EAFA,wBAEuBN,EAFvB,YA1DW,KA0DX,kBAEmDK,EAFnD,kBAIJI,MAAK,SAACW,GAAD,OAASN,EAAeM,MAC7BX,MAAK,SAACgB,GACL,GAAIJ,OAAOC,QAAQG,GAAQF,OAAQ,CAGjC,IAFA,IAAMnE,EAAW,GAERsE,EAAI,EAAGA,EAAID,EAAOE,KAAKJ,OAAQG,GAAK,EAC3CtE,EAASwE,KAAKJ,EAA0BC,EAAOE,KAAKD,KAGtD,OADAtE,EAASyE,QACFzE,OAKToE,EAA4B,SAACX,GACjC,IAIMiB,EAAS,CACb1C,GAJArB,KAAKgE,SAASrD,SAAS,IAAIsD,UAAU,EAAG,IACxCjE,KAAKgE,SAASrD,SAAS,IAAIsD,UAAU,EAAG,IAIxCnD,KAAMgC,EAAKoB,KACXC,QAASrB,EAAKsB,IAAID,QAClB3D,KAAMsC,EAAK1C,GACXiE,SAAUvB,EAAKwB,KAAKD,SACpBE,QAASzB,EAAKxB,QAAQ,GAAGD,GACzBnB,YAAa4C,EAAKwB,KAAKE,KACvBzD,YAAa+B,EAAKxB,QAAQ,GAAGP,YAC7BE,WAAY6B,EAAK2B,KAAKC,MACtBC,UAAW7B,EAAK8B,KAoBlB,OAjBI9B,EAAKxD,SACPyE,EAAOzE,OAASwD,EAAKxD,QAGnBwD,EAAKxB,QAAQ,GAAG7B,OAClBsE,EAAOtE,KAAOqD,EAAKxB,QAAQ,GAAG7B,MAG5BqD,EAAKwB,KAAKO,UAAY/B,EAAKwB,KAAKQ,WAClCf,EAAO/C,IAAM8B,EAAKwB,KAAKQ,SACvBf,EAAOgB,IAAMjC,EAAKwB,KAAKO,UAIzBvB,OAAO0B,KAAKjB,GAAQkB,SAClB,SAAC7D,GAAD,YAAyB8D,IAAhBnB,EAAO3C,WAA6B2C,EAAO3C,MAE/C2C,GAGLzC,EAAU,KAiBd,OAdGhB,GAAkBgD,OAAO0B,KAAK1E,GAAgBkD,QAC9CnE,GAAYiE,OAAO0B,KAAK3F,GAAUmE,UAEnClC,EACE,kBAAC6D,EAAD,CACElD,IAAKA,EACL3B,eAAgBA,EAChBjB,SAAUA,EACV6C,OAAQA,EACRR,MAAOA,KAMX,yBAAKjD,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,EAAD,CAAQI,cA3GQ,SAACuG,GACP,UAAVA,EAAEhE,KACJc,EAAOkD,EAAEC,OAAOC,UA0Gd,kBAAC,EAAD,CAAO5D,MAAOA,IACd,yBAAKjD,UAAU,eAAe6C,MCxIlBiE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBzD,MAAK,SAAA0D,GACJA,EAAaC,gBAEd1D,OAAM,SAAAjB,GACL4E,QAAQ5E,MAAMA,EAAM6E,c","file":"static/js/main.676f6d56.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Search.css\";\n\nconst Search = (props) => {\n  return (\n    <div className=\"search\">\n      <div>\n        <input\n          className=\"input\"\n          placeholder=\"Search by zipcode\"\n          type=\"text\"\n          onKeyPress={props.handleKeyDown}\n        />\n        <svg className=\"searchIcon\" viewBox=\"0 0 24 24\">\n          <path\n            fill=\"currentColor\"\n            d=\"M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z\"\n          />\n        </svg>\n      </div>\n    </div>\n  );\n};\n\nexport default Search;\n","const aux = props => props.children;\n//children property outputs whatever gets entered btwn opening and closing tags of this component\n\nexport default aux;\n","import React from \"react\";\nimport \"./Forecast.css\";\n\nconst Forecast = (props) => {\n  const time = props.forecast.dt_txt;\n  let forecastDates = new Date(time);\n  let icon = props.forecast.icon;\n  icon = icon.replace(/n/g, \"d\");\n  const weatherIcon = `https://openweathermap.org/img/wn/${icon}@2x.png`;\n  forecastDates = forecastDates.toDateString();\n  forecastDates = forecastDates.slice(0, 4);\n  return (\n    <div className=\"days\">\n      <div>{forecastDates}</div>\n      <img src={weatherIcon} alt=\"weather icon\" />\n      <div>{Math.round(props.forecast.temperature)}°</div>\n    </div>\n  );\n};\n\nexport default Forecast;\n","import React from \"react\";\nimport Forecast from \"./Forecast/Forecast\";\nimport { english_ordinal_suffix } from \"../../helpers/functions\";\nimport \"./WeatherCard.css\";\n\nconst weatherCard = (props) => {\n  const iconUrl = \"https://openweathermap.org/img/wn/\";\n  const fullIconPath = `${iconUrl}${props.currentWeather.icon}@2x.png`;\n  let dateTimeStamp = props.currentWeather.date;\n  let dateObject = new Date(dateTimeStamp * 1000);\n  let sDate = dateObject.toString();\n\n  const currentDate = `${sDate.slice(3, 8)} ${english_ordinal_suffix(\n    dateObject\n  )},${sDate.slice(10, 16)}`;\n\n  return (\n    <div className=\"weather\">\n      <div className=\"wrapper\">\n        <div className=\"location-weather\">\n          <div className=\"location-info\">\n            <div>{currentDate}</div>\n            <div>{props.currentWeather.city}</div>\n          </div>\n          <div className=\"current-weather\">\n            <div className=\"current-temp\">\n              {Math.round(props.currentWeather.temperature)}°\n            </div>\n            <div>\n              <div className=\"current-weather-info\">\n                <p>{props.currentWeather.description}</p>\n                <img src={fullIconPath} alt=\"weather icon\" />\n              </div>\n              <p>\n                The high today will be {Math.round(props.currentWeather.max)}°\n                with wind speeds up to{\" \"}\n                {Math.round(props.currentWeather.wind_speed)} m/s\n              </p>\n            </div>\n          </div>\n\n          <div className=\"forecast row\">\n            {props.forecast.map((weekForecast) => {\n              return <Forecast key={weekForecast.id} forecast={weekForecast} />;\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default weatherCard;\n","export function english_ordinal_suffix(dt) {\n  return (\n    dt.getDate() +\n    (dt.getDate() % 10 === 1 && dt.getDate() !== 11\n      ? \"st\"\n      : dt.getDate() % 10 === 2 && dt.getDate() !== 12\n      ? \"nd\"\n      : dt.getDate() % 10 === 3 && dt.getDate() !== 13\n      ? \"rd\"\n      : \"th\")\n  );\n}\n","import React from \"react\";\nimport Aux from \"../hoc/Aux\";\nimport WeatherCard from \"../components/WeatherCard/WeatherCard\";\n\nconst weather = (props) => {\n  return (\n    <Aux>\n      <WeatherCard\n        forecast={props.forecast}\n        currentWeather={props.currentWeather}\n      />\n    </Aux>\n  );\n};\n\nexport default weather;\n","import React from \"react\";\n\nconst Error = (props) => {\n  const errorMsg = {\n    color: \"#a91717\",\n    textAlign: \"center\",\n    marginBottom: \"10px\",\n  };\n\n  let errorDisplay = null;\n  if (props.error != null) {\n    errorDisplay = <p style={errorMsg}>{props.error}</p>;\n  }\n\n  return <div>{errorDisplay}</div>;\n};\n\nexport default Error;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport Search from \"./components/Search/Search\";\nimport Weather from \"./containers/Weather\";\nimport Error from \"./components/Error\";\n\nconst App = () => {\n  const [zip, setZip] = useState(3500);\n  const [currentWeather, setCurrentWeather] = useState({});\n  const [forecast, setForecast] = useState([]);\n  const [error, setError] = useState(null);\n  const countryCode = \"DK\";\n  const apiKey = \"a3b0755ce308bdd5b6b20382c8352be8\";\n  const baseUrl = `https://api.openweathermap.org/data/2.5/`;\n\n  useEffect(() => {\n    getWeather(zip)\n      .then((weather) => {\n        setCurrentWeather(weather);\n        setError(null);\n      })\n      .catch((err) => {\n        setError(`Error fetching current weather for : `, error);\n      });\n  }, [zip, error]);\n\n  useEffect(() => {\n    getForecast(zip)\n      .then((data) => {\n        setForecast(data);\n        setError(null);\n      })\n      .catch((err) => {\n        setError(`Error fetching forecast for zip ${zip}:`, error);\n      });\n  }, [zip, error]);\n\n  //Get and Set Zip from Search\n  const handleKeyDown = (e) => {\n    if (e.key === \"Enter\") {\n      setZip(e.target.value);\n    }\n  };\n\n  const handleResponse = (response) => {\n    if (response.status === 200) {\n      return response.data;\n    } else {\n      throw new Error(\"Error: Location \" + response.statusText);\n    }\n  };\n\n  //Get Current Weather\n  const getWeather = () => {\n    return axios\n      .get(\n        `${baseUrl}weather?zip=${zip},${countryCode}&appid=${apiKey}&units=metric`\n      )\n      .then((res) => handleResponse(res))\n      .then((weather) => {\n        if (Object.entries(weather).length) {\n          const mappedData = mapDataToWeatherInterface(weather);\n          return mappedData;\n        }\n      });\n  };\n\n  //Get Next 5 Days Forecast\n  const getForecast = () => {\n    return axios\n      .get(\n        `${baseUrl}forecast?zip=${zip},${countryCode}&appid=${apiKey}&units=metric`\n      )\n      .then((res) => handleResponse(res))\n      .then((result) => {\n        if (Object.entries(result).length) {\n          const forecast = [];\n\n          for (let i = 0; i < result.list.length; i += 7) {\n            forecast.push(mapDataToWeatherInterface(result.list[i]));\n          }\n          forecast.shift();\n          return forecast;\n        }\n      });\n  };\n\n  const mapDataToWeatherInterface = (data) => {\n    const id =\n      Math.random().toString(36).substring(2, 15) +\n      Math.random().toString(36).substring(2, 15);\n\n    const mapped = {\n      id: id,\n      city: data.name,\n      country: data.sys.country,\n      date: data.dt,\n      humidity: data.main.humidity,\n      icon_id: data.weather[0].id,\n      temperature: data.main.temp,\n      description: data.weather[0].description,\n      wind_speed: data.wind.speed,\n      condition: data.cod,\n    };\n\n    if (data.dt_txt) {\n      mapped.dt_txt = data.dt_txt;\n    }\n\n    if (data.weather[0].icon) {\n      mapped.icon = data.weather[0].icon;\n    }\n\n    if (data.main.temp_min && data.main.temp_max) {\n      mapped.max = data.main.temp_max;\n      mapped.min = data.main.temp_min;\n    }\n\n    // remove fields which are undefined\n    Object.keys(mapped).forEach(\n      (key) => mapped[key] === undefined && delete mapped[key]\n    );\n    return mapped;\n  };\n\n  let weather = null;\n\n  if (\n    (currentWeather && Object.keys(currentWeather).length) ||\n    (forecast && Object.keys(forecast).length)\n  ) {\n    weather = (\n      <Weather\n        zip={zip}\n        currentWeather={currentWeather}\n        forecast={forecast}\n        setZip={setZip}\n        error={error}\n      />\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <Search handleKeyDown={handleKeyDown} />\n        <Error error={error} />\n        <div className=\"weather-app\">{weather}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}